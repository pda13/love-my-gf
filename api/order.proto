syntax = "proto3";

package api;

import "validate/validate.proto";

option go_package = "order.service.v1;client";

service OrderService {
  rpc CreateOrder(CreateOrderRequest) returns (CreateOrderResponse);
  rpc GetOrder(GetOrderRequest) returns (GetOrderResponse);
  rpc UpdateOrder(UpdateOrderRequest) returns (UpdateOrderResponse);
  rpc DeleteOrder(DeleteOrderRequest) returns (DeleteOrderResponse);
  rpc ListOrders(ListOrdersRequest) returns (ListOrdersResponse);
}

message Order {
  string id = 1 [(validate.rules).string.uuid = true];
  string item = 2 [(validate.rules).string = {min_len: 1}];
  int32 quantity = 3 [(validate.rules).int32 = {gte: 0}];
}

message CreateOrderRequest {
  string item = 1 [(validate.rules).string = {min_len: 1}];
  int32 quantity = 2 [(validate.rules).int32 = {gt: 0}];
}

message CreateOrderResponse {
  string id = 1 [(validate.rules).string.uuid = true];
}

message GetOrderRequest {
  string id = 1 [(validate.rules).string.uuid = true];
}

message GetOrderResponse {
  Order order = 1 [(validate.rules).message.required = true];
}

message UpdateOrderRequest {
  string id = 1 [(validate.rules).string.uuid = true];
  string item = 2 [(validate.rules).string = {min_len: 1}];
  int32 quantity = 3 [(validate.rules).int32 = {gte: 0}];
}

message UpdateOrderResponse {
  Order order = 1 [(validate.rules).message.required = true];
}

message DeleteOrderRequest {
  string id = 1 [(validate.rules).string.uuid = true];
}

message DeleteOrderResponse {
  bool success = 1;
}

message ListOrdersRequest {}

message ListOrdersResponse {
  repeated Order orders = 1 [(validate.rules).repeated = {min_items: 0, items: {message: {required: true}}}];
}
